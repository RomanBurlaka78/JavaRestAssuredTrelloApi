{"uid":"ee308199e17cf66a","name":"testCreateNewCard","fullName":"api.tests.api.CardsApiTest.testCreateNewCard","historyId":"605bc4ead0488eae7e9b7a3d60653180","time":{"start":1742985042997,"stop":1742985043110,"duration":113},"description":"Create a new Card","descriptionHtml":"<p>Create a new Card</p>\n","status":"broken","statusMessage":"Cannot determine which path implementation to use because the content-type text/plain; charset=utf-8 doesn't map to a path implementation.","statusTrace":"java.lang.IllegalStateException: Cannot determine which path implementation to use because the content-type text/plain; charset=utf-8 doesn't map to a path implementation.\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)\n\tat org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)\n\tat org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:60)\n\tat org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:86)\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:57)\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:263)\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)\n\tat io.restassured.internal.RestAssuredResponseOptionsGroovyImpl.path(RestAssuredResponseOptionsGroovyImpl.groovy:414)\n\tat io.restassured.internal.RestAssuredResponseOptionsImpl.path(RestAssuredResponseOptionsImpl.java:230)\n\tat api.tests.api.CardsApiTest.testCreateNewCard(CardsApiTest.java:23)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)\n\tat org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)\n\tat org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)\n\tat org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)\n\tat org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)\n\tat org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1511)\n\tat org.testng.TestRunner.privateRun(TestRunner.java:739)\n\tat org.testng.TestRunner.run(TestRunner.java:614)\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:421)\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:312)\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1208)\n\tat org.testng.TestNG.runSuites(TestNG.java:1112)\n\tat org.testng.TestNG.run(TestNG.java:1079)\n\tat org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:308)\n\tat org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:71)\n\tat org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:113)\n\tat org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)\n\tat org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)\n\tat org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)\n\tat org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)\n","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"description":"Create a new Card","status":"broken","statusMessage":"Cannot determine which path implementation to use because the content-type text/plain; charset=utf-8 doesn't map to a path implementation.","statusTrace":"java.lang.IllegalStateException: Cannot determine which path implementation to use because the content-type text/plain; charset=utf-8 doesn't map to a path implementation.\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)\n\tat org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)\n\tat org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:60)\n\tat org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:86)\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:57)\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:263)\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)\n\tat io.restassured.internal.RestAssuredResponseOptionsGroovyImpl.path(RestAssuredResponseOptionsGroovyImpl.groovy:414)\n\tat io.restassured.internal.RestAssuredResponseOptionsImpl.path(RestAssuredResponseOptionsImpl.java:230)\n\tat api.tests.api.CardsApiTest.testCreateNewCard(CardsApiTest.java:23)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)\n\tat org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)\n\tat org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)\n\tat org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)\n\tat org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)\n\tat org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1511)\n\tat org.testng.TestRunner.privateRun(TestRunner.java:739)\n\tat org.testng.TestRunner.run(TestRunner.java:614)\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:421)\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:312)\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1208)\n\tat org.testng.TestNG.runSuites(TestNG.java:1112)\n\tat org.testng.TestNG.run(TestNG.java:1079)\n\tat org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:308)\n\tat org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:71)\n\tat org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:113)\n\tat org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)\n\tat org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)\n\tat org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)\n\tat org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)\n","steps":[{"name":"Create a new Card: id list = 67e3d74fe16a34b9752c06bf","time":{"start":1742985042998,"stop":1742985043106,"duration":108},"status":"passed","steps":[],"attachments":[{"uid":"acf801851f85ff1f","name":"Request","source":"acf801851f85ff1f.html","type":"text/html","size":728},{"uid":"7c681870437011a2","name":"HTTP/1.1 401 Unauthorized","source":"7c681870437011a2.html","type":"text/html","size":3255}],"parameters":[{"name":"idList","value":"67e3d74fe16a34b9752c06bf"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":2,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"package","value":"api.tests.api.CardsApiTest"},{"name":"testClass","value":"api.tests.api.CardsApiTest"},{"name":"testMethod","value":"testCreateNewCard"},{"name":"parentSuite","value":"All test"},{"name":"suite","value":"Tests with xml"},{"name":"subSuite","value":"api.tests.api.CardsApiTest"},{"name":"host","value":"64c66d49854f"},{"name":"thread","value":"83@64c66d49854f.main(1)"},{"name":"framework","value":"testng"},{"name":"language","value":"java"},{"name":"story","value":"Verify cards"},{"name":"epic","value":"API Tests"},{"name":"owner","value":"Group JavaForwardToOffer"},{"name":"feature","value":"Cards Validation"},{"name":"severity","value":"critical"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","owner":"Group JavaForwardToOffer","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":2,"skipped":0,"passed":12,"unknown":0,"total":14},"items":[{"uid":"76339585d99bcdc6","reportUrl":"https://RomanBurlaka78.github.io/JavaRestAssuredTrelloApi/35//#testresult/76339585d99bcdc6","status":"broken","statusDetails":"Cannot determine which path implementation to use because the content-type text/plain; charset=utf-8 doesn't map to a path implementation.","time":{"start":1742979883528,"stop":1742979883659,"duration":131}},{"uid":"c9e4d493567d926d","reportUrl":"https://RomanBurlaka78.github.io/JavaRestAssuredTrelloApi/34//#testresult/c9e4d493567d926d","status":"passed","time":{"start":1742936894614,"stop":1742936894945,"duration":331}},{"uid":"f130ee0de365f351","reportUrl":"https://RomanBurlaka78.github.io/JavaRestAssuredTrelloApi/33//#testresult/f130ee0de365f351","status":"passed","time":{"start":1742936808989,"stop":1742936809226,"duration":237}},{"uid":"367aad2a4cc2d2a","reportUrl":"https://RomanBurlaka78.github.io/JavaRestAssuredTrelloApi/32//#testresult/367aad2a4cc2d2a","status":"passed","time":{"start":1742916505175,"stop":1742916505561,"duration":386}},{"uid":"288895f6d4f9379a","reportUrl":"https://RomanBurlaka78.github.io/JavaRestAssuredTrelloApi/31//#testresult/288895f6d4f9379a","status":"passed","time":{"start":1742916421496,"stop":1742916421868,"duration":372}},{"uid":"88e0a6f8f63285c4","reportUrl":"https://RomanBurlaka78.github.io/JavaRestAssuredTrelloApi/30//#testresult/88e0a6f8f63285c4","status":"passed","time":{"start":1742654120109,"stop":1742654120362,"duration":253}},{"uid":"d6db192e742c56dd","reportUrl":"https://RomanBurlaka78.github.io/JavaRestAssuredTrelloApi/29//#testresult/d6db192e742c56dd","status":"passed","time":{"start":1742654061792,"stop":1742654062099,"duration":307}},{"uid":"e4e5d3fb8d42084","reportUrl":"https://RomanBurlaka78.github.io/JavaRestAssuredTrelloApi/28//#testresult/e4e5d3fb8d42084","status":"passed","time":{"start":1742580809112,"stop":1742580809392,"duration":280}},{"uid":"2597c3ca7b4fb4be","reportUrl":"https://RomanBurlaka78.github.io/JavaRestAssuredTrelloApi/27//#testresult/2597c3ca7b4fb4be","status":"passed","time":{"start":1742580712475,"stop":1742580714079,"duration":1604}},{"uid":"b3638d793682c150","reportUrl":"https://RomanBurlaka78.github.io/JavaRestAssuredTrelloApi/19//#testresult/b3638d793682c150","status":"passed","time":{"start":1741852149574,"stop":1741852149946,"duration":372}},{"uid":"e8f54f5ccfc0e563","reportUrl":"https://RomanBurlaka78.github.io/JavaRestAssuredTrelloApi/18//#testresult/e8f54f5ccfc0e563","status":"passed","time":{"start":1741852044629,"stop":1741852044978,"duration":349}},{"uid":"515ac116aefd600e","reportUrl":"https://RomanBurlaka78.github.io/JavaRestAssuredTrelloApi/17//#testresult/515ac116aefd600e","status":"passed","time":{"start":1741385254125,"stop":1741385254356,"duration":231}},{"uid":"a768bf1d1ebcdbd7","reportUrl":"https://RomanBurlaka78.github.io/JavaRestAssuredTrelloApi/16//#testresult/a768bf1d1ebcdbd7","status":"passed","time":{"start":1741385079324,"stop":1741385079632,"duration":308}}]},"tags":[]},"source":"ee308199e17cf66a.json","parameterValues":[]}