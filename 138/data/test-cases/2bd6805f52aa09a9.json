{"uid":"2bd6805f52aa09a9","name":"testGetAFieldOnABord","fullName":"api.tests.api.BoardApiTest.testGetAFieldOnABord","historyId":"5fe4e53e9ff4db0a96c0d039d8302c4d","time":{"start":1744714417095,"stop":1744714417269,"duration":174},"description":"get specific field from a board","descriptionHtml":"<p>get specific field from a board</p>\n","status":"broken","statusMessage":"Failed to parse the JSON document","statusTrace":"io.restassured.path.json.exception.JsonPathException: Failed to parse the JSON document\n\tat io.restassured.path.json.JsonPath$ExceptionCatcher.invoke(JsonPath.java:1002)\n\tat io.restassured.path.json.JsonPath$4.doParseWith(JsonPath.java:967)\n\tat io.restassured.path.json.JsonPath$JsonParser.parseWith(JsonPath.java:1047)\n\tat io.restassured.path.json.JsonPath.get(JsonPath.java:202)\n\tat io.restassured.path.json.JsonPath.getString(JsonPath.java:352)\n\tat api.tests.api.BoardApiTest.testGetAFieldOnABord(BoardApiTest.java:92)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)\n\tat org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)\n\tat org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)\n\tat org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)\n\tat org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)\n\tat org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1511)\n\tat org.testng.TestRunner.privateRun(TestRunner.java:739)\n\tat org.testng.TestRunner.run(TestRunner.java:614)\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:421)\n\tat org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)\n\tat org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:840)\nCaused by: groovy.json.JsonException: Lexing failed on line: 1, column: 1, while reading 'i', no possible valid JSON value or punctuation could be recognized.\n\tat groovy.json.JsonLexer.nextToken(JsonLexer.java:86)\n\tat groovy.json.JsonLexer$nextToken.call(Unknown Source)\n\tat io.restassured.internal.path.json.ConfigurableJsonSlurper.parse(ConfigurableJsonSlurper.groovy:97)\n\tat io.restassured.internal.path.json.ConfigurableJsonSlurper$parse.callCurrent(Unknown Source)\n\tat io.restassured.internal.path.json.ConfigurableJsonSlurper.parseText(ConfigurableJsonSlurper.groovy:83)\n\tat io.restassured.path.json.JsonPath$4$1.method(JsonPath.java:965)\n\tat io.restassured.path.json.JsonPath$ExceptionCatcher.invoke(JsonPath.java:1000)\n\t... 27 more\n","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"description":"get specific field from a board","status":"broken","statusMessage":"Failed to parse the JSON document","statusTrace":"io.restassured.path.json.exception.JsonPathException: Failed to parse the JSON document\n\tat io.restassured.path.json.JsonPath$ExceptionCatcher.invoke(JsonPath.java:1002)\n\tat io.restassured.path.json.JsonPath$4.doParseWith(JsonPath.java:967)\n\tat io.restassured.path.json.JsonPath$JsonParser.parseWith(JsonPath.java:1047)\n\tat io.restassured.path.json.JsonPath.get(JsonPath.java:202)\n\tat io.restassured.path.json.JsonPath.getString(JsonPath.java:352)\n\tat api.tests.api.BoardApiTest.testGetAFieldOnABord(BoardApiTest.java:92)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)\n\tat org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)\n\tat org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)\n\tat org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)\n\tat org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)\n\tat org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1511)\n\tat org.testng.TestRunner.privateRun(TestRunner.java:739)\n\tat org.testng.TestRunner.run(TestRunner.java:614)\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:421)\n\tat org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)\n\tat org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:840)\nCaused by: groovy.json.JsonException: Lexing failed on line: 1, column: 1, while reading 'i', no possible valid JSON value or punctuation could be recognized.\n\tat groovy.json.JsonLexer.nextToken(JsonLexer.java:86)\n\tat groovy.json.JsonLexer$nextToken.call(Unknown Source)\n\tat io.restassured.internal.path.json.ConfigurableJsonSlurper.parse(ConfigurableJsonSlurper.groovy:97)\n\tat io.restassured.internal.path.json.ConfigurableJsonSlurper$parse.callCurrent(Unknown Source)\n\tat io.restassured.internal.path.json.ConfigurableJsonSlurper.parseText(ConfigurableJsonSlurper.groovy:83)\n\tat io.restassured.path.json.JsonPath$4$1.method(JsonPath.java:965)\n\tat io.restassured.path.json.JsonPath$ExceptionCatcher.invoke(JsonPath.java:1000)\n\t... 27 more\n","steps":[{"name":"getting a field - /name, from a bord which id is - null","time":{"start":1744714417095,"stop":1744714417269,"duration":174},"status":"passed","steps":[],"attachments":[{"uid":"870aded237c94266","name":"Request","source":"870aded237c94266.html","type":"text/html","size":587},{"uid":"7a4f240a16648b8f","name":"HTTP/1.1 400 Bad Request","source":"7a4f240a16648b8f.html","type":"text/html","size":3346}],"parameters":[{"name":"boardId","value":"null"},{"name":"fieldName","value":"/name"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":2,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"package","value":"api.tests.api.BoardApiTest"},{"name":"testClass","value":"api.tests.api.BoardApiTest"},{"name":"testMethod","value":"testGetAFieldOnABord"},{"name":"parentSuite","value":"All test"},{"name":"suite","value":"Tests API with xml"},{"name":"subSuite","value":"api.tests.api.BoardApiTest"},{"name":"host","value":"4b02baaf223d"},{"name":"thread","value":"81@4b02baaf223d.TestNG-tests-1(22)"},{"name":"framework","value":"testng"},{"name":"language","value":"java"},{"name":"story","value":"Bord"},{"name":"epic","value":"API Tests"},{"name":"tag","value":"api"},{"name":"owner","value":"Group JavaForwardToOffer"},{"name":"feature","value":"Board Validation"},{"name":"severity","value":"critical"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","owner":"Group JavaForwardToOffer","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":4,"skipped":0,"passed":52,"unknown":0,"total":56},"items":[{"uid":"f9fb39e3f67c99a","reportUrl":"https://RomanBurlaka78.github.io/JavaRestAssuredTrelloApi/137//#testresult/f9fb39e3f67c99a","status":"broken","statusDetails":"Failed to parse the JSON document","time":{"start":1744714308407,"stop":1744714308550,"duration":143}},{"uid":"ef0ee5b00ae71ce5","reportUrl":"https://RomanBurlaka78.github.io/JavaRestAssuredTrelloApi/136//#testresult/ef0ee5b00ae71ce5","status":"broken","statusDetails":"Failed to parse the JSON document","time":{"start":1744713840965,"stop":1744713841090,"duration":125}},{"uid":"705eb21d0ef2382c","reportUrl":"https://RomanBurlaka78.github.io/JavaRestAssuredTrelloApi/135//#testresult/705eb21d0ef2382c","status":"passed","time":{"start":1744638665762,"stop":1744638665958,"duration":196}},{"uid":"d3d920a423d4b984","reportUrl":"https://RomanBurlaka78.github.io/JavaRestAssuredTrelloApi/134//#testresult/d3d920a423d4b984","status":"passed","time":{"start":1744638493210,"stop":1744638493337,"duration":127}},{"uid":"5fad58ab674ec2b1","reportUrl":"https://RomanBurlaka78.github.io/JavaRestAssuredTrelloApi/128//#testresult/5fad58ab674ec2b1","status":"passed","time":{"start":1744497377287,"stop":1744497377390,"duration":103}},{"uid":"e2629697e42530f9","reportUrl":"https://RomanBurlaka78.github.io/JavaRestAssuredTrelloApi/127//#testresult/e2629697e42530f9","status":"passed","time":{"start":1744496777030,"stop":1744496777239,"duration":209}},{"uid":"b5ca2fcca3efa649","reportUrl":"https://RomanBurlaka78.github.io/JavaRestAssuredTrelloApi/124//#testresult/b5ca2fcca3efa649","status":"passed","time":{"start":1744386075362,"stop":1744386075491,"duration":129}},{"uid":"9e94b42edb7f89d0","reportUrl":"https://RomanBurlaka78.github.io/JavaRestAssuredTrelloApi/122//#testresult/9e94b42edb7f89d0","status":"passed","time":{"start":1744372436852,"stop":1744372436972,"duration":120}},{"uid":"5c7537d03cd254f1","reportUrl":"https://RomanBurlaka78.github.io/JavaRestAssuredTrelloApi/121//#testresult/5c7537d03cd254f1","status":"passed","time":{"start":1744372168342,"stop":1744372168543,"duration":201}},{"uid":"9b5034b8c9369ac7","reportUrl":"https://RomanBurlaka78.github.io/JavaRestAssuredTrelloApi/118//#testresult/9b5034b8c9369ac7","status":"passed","time":{"start":1744367532560,"stop":1744367532739,"duration":179}},{"uid":"2b09e50a05ede4e3","reportUrl":"https://RomanBurlaka78.github.io/JavaRestAssuredTrelloApi/117//#testresult/2b09e50a05ede4e3","status":"broken","statusDetails":"Failed to parse the JSON document","time":{"start":1744362393410,"stop":1744362393551,"duration":141}},{"uid":"9d9718a4742f2c06","reportUrl":"https://RomanBurlaka78.github.io/JavaRestAssuredTrelloApi/112//#testresult/9d9718a4742f2c06","status":"passed","time":{"start":1744317628172,"stop":1744317628294,"duration":122}},{"uid":"6d19eeb95382a8c","reportUrl":"https://RomanBurlaka78.github.io/JavaRestAssuredTrelloApi/110//#testresult/6d19eeb95382a8c","status":"passed","time":{"start":1744317220856,"stop":1744317220956,"duration":100}},{"uid":"78a555d6944c9464","reportUrl":"https://RomanBurlaka78.github.io/JavaRestAssuredTrelloApi/108//#testresult/78a555d6944c9464","status":"passed","time":{"start":1744315922827,"stop":1744315923000,"duration":173}},{"uid":"8114b2b4250efd07","reportUrl":"https://RomanBurlaka78.github.io/JavaRestAssuredTrelloApi/107//#testresult/8114b2b4250efd07","status":"passed","time":{"start":1744314146305,"stop":1744314146424,"duration":119}},{"uid":"c5545ca3e9ad3d89","reportUrl":"https://RomanBurlaka78.github.io/JavaRestAssuredTrelloApi/106//#testresult/c5545ca3e9ad3d89","status":"passed","time":{"start":1744309174741,"stop":1744309174855,"duration":114}},{"uid":"ffd106141ab245a5","reportUrl":"https://RomanBurlaka78.github.io/JavaRestAssuredTrelloApi/105//#testresult/ffd106141ab245a5","status":"passed","time":{"start":1744308964013,"stop":1744308964139,"duration":126}},{"uid":"3a61aa399d0ad8d0","reportUrl":"https://RomanBurlaka78.github.io/JavaRestAssuredTrelloApi/104//#testresult/3a61aa399d0ad8d0","status":"passed","time":{"start":1744303758729,"stop":1744303758840,"duration":111}},{"uid":"e8c5ff2797b023cb","reportUrl":"https://RomanBurlaka78.github.io/JavaRestAssuredTrelloApi/103//#testresult/e8c5ff2797b023cb","status":"passed","time":{"start":1744303372798,"stop":1744303372920,"duration":122}},{"uid":"1c1a6077cd4842d4","reportUrl":"https://RomanBurlaka78.github.io/JavaRestAssuredTrelloApi/102//#testresult/1c1a6077cd4842d4","status":"passed","time":{"start":1744287879659,"stop":1744287879866,"duration":207}}]},"tags":["api"]},"source":"2bd6805f52aa09a9.json","parameterValues":[]}