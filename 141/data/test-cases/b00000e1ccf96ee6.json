{"uid":"b00000e1ccf96ee6","name":"testGetFilteredCardsOnABoard","fullName":"api.tests.api.BoardApiTest.testGetFilteredCardsOnABoard","historyId":"c2648cb33c4eb35a35f571e5b0f23852","time":{"start":1744718641620,"stop":1744718642239,"duration":619},"description":"Get all existed filtered cards from a bord","descriptionHtml":"<p>Get all existed filtered cards from a bord</p>\n","status":"failed","statusMessage":"expected [200] but found [400]","statusTrace":"java.lang.AssertionError: expected [200] but found [400]\n\tat org.testng.Assert.fail(Assert.java:111)\n\tat org.testng.Assert.failNotEquals(Assert.java:1578)\n\tat org.testng.Assert.assertEqualsImpl(Assert.java:150)\n\tat org.testng.Assert.assertEquals(Assert.java:132)\n\tat org.testng.Assert.assertEquals(Assert.java:1419)\n\tat org.testng.Assert.assertEquals(Assert.java:1383)\n\tat org.testng.Assert.assertEquals(Assert.java:1429)\n\tat api.tests.api.BoardApiTest.testGetFilteredCardsOnABoard(BoardApiTest.java:146)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)\n\tat org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)\n\tat org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)\n\tat org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)\n\tat org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)\n\tat org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1511)\n\tat org.testng.TestRunner.privateRun(TestRunner.java:739)\n\tat org.testng.TestRunner.run(TestRunner.java:614)\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:421)\n\tat org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)\n\tat org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:840)\n","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"description":"Get all existed filtered cards from a bord","status":"failed","statusMessage":"expected [200] but found [400]","statusTrace":"java.lang.AssertionError: expected [200] but found [400]\n\tat org.testng.Assert.fail(Assert.java:111)\n\tat org.testng.Assert.failNotEquals(Assert.java:1578)\n\tat org.testng.Assert.assertEqualsImpl(Assert.java:150)\n\tat org.testng.Assert.assertEquals(Assert.java:132)\n\tat org.testng.Assert.assertEquals(Assert.java:1419)\n\tat org.testng.Assert.assertEquals(Assert.java:1383)\n\tat org.testng.Assert.assertEquals(Assert.java:1429)\n\tat api.tests.api.BoardApiTest.testGetFilteredCardsOnABoard(BoardApiTest.java:146)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)\n\tat org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)\n\tat org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)\n\tat org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)\n\tat org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)\n\tat org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1511)\n\tat org.testng.TestRunner.privateRun(TestRunner.java:739)\n\tat org.testng.TestRunner.run(TestRunner.java:614)\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:421)\n\tat org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)\n\tat org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:840)\n","steps":[{"name":"Get filtered cards presented on a board","time":{"start":1744718641620,"stop":1744718642236,"duration":616},"status":"passed","steps":[],"attachments":[{"uid":"403b91bc9b3afe1a","name":"Request","source":"403b91bc9b3afe1a.html","type":"text/html","size":597},{"uid":"5d6bd995a17bd573","name":"HTTP/1.1 400 Bad Request","source":"5d6bd995a17bd573.html","type":"text/html","size":3348}],"parameters":[{"name":"boardId","value":"null"},{"name":"filtereCardsEndPoint","value":"/cards/"},{"name":"filterName","value":"all"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":2,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"package","value":"api.tests.api.BoardApiTest"},{"name":"testClass","value":"api.tests.api.BoardApiTest"},{"name":"testMethod","value":"testGetFilteredCardsOnABoard"},{"name":"parentSuite","value":"All test"},{"name":"suite","value":"Tests API with xml"},{"name":"subSuite","value":"api.tests.api.BoardApiTest"},{"name":"host","value":"4e27ef96e65c"},{"name":"thread","value":"81@4e27ef96e65c.TestNG-tests-1(22)"},{"name":"framework","value":"testng"},{"name":"language","value":"java"},{"name":"story","value":"Bord"},{"name":"epic","value":"API Tests"},{"name":"tag","value":"api"},{"name":"owner","value":"Group JavaForwardToOffer"},{"name":"feature","value":"Board Validation"},{"name":"severity","value":"normal"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","owner":"Group JavaForwardToOffer","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":7,"broken":0,"skipped":0,"passed":51,"unknown":0,"total":58},"items":[{"uid":"2fba6f199b3910d5","reportUrl":"https://RomanBurlaka78.github.io/JavaRestAssuredTrelloApi/140//#testresult/2fba6f199b3910d5","status":"failed","statusDetails":"expected [200] but found [400]","time":{"start":1744715929907,"stop":1744715930108,"duration":201}},{"uid":"5278e13c46ea14d8","reportUrl":"https://RomanBurlaka78.github.io/JavaRestAssuredTrelloApi/139//#testresult/5278e13c46ea14d8","status":"failed","statusDetails":"expected [200] but found [400]","time":{"start":1744715900588,"stop":1744715900759,"duration":171}},{"uid":"db684a1e56da7071","reportUrl":"https://RomanBurlaka78.github.io/JavaRestAssuredTrelloApi/138//#testresult/db684a1e56da7071","status":"failed","statusDetails":"expected [200] but found [400]","time":{"start":1744714417858,"stop":1744714418008,"duration":150}},{"uid":"ca7a4d9a59975920","reportUrl":"https://RomanBurlaka78.github.io/JavaRestAssuredTrelloApi/137//#testresult/ca7a4d9a59975920","status":"failed","statusDetails":"expected [200] but found [400]","time":{"start":1744714309234,"stop":1744714309344,"duration":110}},{"uid":"951033c7000ea019","reportUrl":"https://RomanBurlaka78.github.io/JavaRestAssuredTrelloApi/136//#testresult/951033c7000ea019","status":"failed","statusDetails":"expected [200] but found [400]","time":{"start":1744713841659,"stop":1744713841782,"duration":123}},{"uid":"d3af95d42988a20","reportUrl":"https://RomanBurlaka78.github.io/JavaRestAssuredTrelloApi/135//#testresult/d3af95d42988a20","status":"passed","time":{"start":1744638666711,"stop":1744638666879,"duration":168}},{"uid":"52668468c8cd95f1","reportUrl":"https://RomanBurlaka78.github.io/JavaRestAssuredTrelloApi/134//#testresult/52668468c8cd95f1","status":"passed","time":{"start":1744638493891,"stop":1744638494010,"duration":119}},{"uid":"16835bebde641ee5","reportUrl":"https://RomanBurlaka78.github.io/JavaRestAssuredTrelloApi/128//#testresult/16835bebde641ee5","status":"passed","time":{"start":1744497377735,"stop":1744497377836,"duration":101}},{"uid":"f002067f670eba63","reportUrl":"https://RomanBurlaka78.github.io/JavaRestAssuredTrelloApi/127//#testresult/f002067f670eba63","status":"passed","time":{"start":1744496777914,"stop":1744496778078,"duration":164}},{"uid":"f3b122909dd4deec","reportUrl":"https://RomanBurlaka78.github.io/JavaRestAssuredTrelloApi/124//#testresult/f3b122909dd4deec","status":"passed","time":{"start":1744386075848,"stop":1744386075959,"duration":111}},{"uid":"2d71836fb71e02f9","reportUrl":"https://RomanBurlaka78.github.io/JavaRestAssuredTrelloApi/122//#testresult/2d71836fb71e02f9","status":"passed","time":{"start":1744372437577,"stop":1744372437692,"duration":115}},{"uid":"71f0503fb183a552","reportUrl":"https://RomanBurlaka78.github.io/JavaRestAssuredTrelloApi/121//#testresult/71f0503fb183a552","status":"passed","time":{"start":1744372169219,"stop":1744372169410,"duration":191}},{"uid":"5e5993eda16b9142","reportUrl":"https://RomanBurlaka78.github.io/JavaRestAssuredTrelloApi/117//#testresult/5e5993eda16b9142","status":"failed","statusDetails":"expected [200] but found [400]","time":{"start":1744362394155,"stop":1744362394286,"duration":131}},{"uid":"7b68e22a72ec3aff","reportUrl":"https://RomanBurlaka78.github.io/JavaRestAssuredTrelloApi/112//#testresult/7b68e22a72ec3aff","status":"passed","time":{"start":1744317628690,"stop":1744317628784,"duration":94}},{"uid":"eb21d25db7493763","reportUrl":"https://RomanBurlaka78.github.io/JavaRestAssuredTrelloApi/110//#testresult/eb21d25db7493763","status":"passed","time":{"start":1744317221321,"stop":1744317221419,"duration":98}},{"uid":"e2f624fa781c7f4d","reportUrl":"https://RomanBurlaka78.github.io/JavaRestAssuredTrelloApi/108//#testresult/e2f624fa781c7f4d","status":"passed","time":{"start":1744315923536,"stop":1744315923710,"duration":174}},{"uid":"ffffdcab67619232","reportUrl":"https://RomanBurlaka78.github.io/JavaRestAssuredTrelloApi/107//#testresult/ffffdcab67619232","status":"passed","time":{"start":1744314146796,"stop":1744314146937,"duration":141}},{"uid":"9f9ad8c16f77a1b1","reportUrl":"https://RomanBurlaka78.github.io/JavaRestAssuredTrelloApi/106//#testresult/9f9ad8c16f77a1b1","status":"passed","time":{"start":1744309175257,"stop":1744309175360,"duration":103}},{"uid":"ba9c81b09cb0257b","reportUrl":"https://RomanBurlaka78.github.io/JavaRestAssuredTrelloApi/105//#testresult/ba9c81b09cb0257b","status":"passed","time":{"start":1744308964595,"stop":1744308964713,"duration":118}},{"uid":"99b35cad75dbe681","reportUrl":"https://RomanBurlaka78.github.io/JavaRestAssuredTrelloApi/104//#testresult/99b35cad75dbe681","status":"passed","time":{"start":1744303759216,"stop":1744303759324,"duration":108}}]},"tags":["api"]},"source":"b00000e1ccf96ee6.json","parameterValues":[]}