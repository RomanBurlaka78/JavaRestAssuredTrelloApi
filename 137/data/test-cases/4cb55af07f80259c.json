{"uid":"4cb55af07f80259c","name":"testGetChecklistsOnABoard","fullName":"api.tests.api.BoardApiTest.testGetChecklistsOnABoard","historyId":"dc5b4d24e91c2cba6491611e5944178d","time":{"start":1744714308893,"stop":1744714309070,"duration":177},"description":"Get checklists from a board","descriptionHtml":"<p>Get checklists from a board</p>\n","status":"failed","statusMessage":"expected [200] but found [400]","statusTrace":"java.lang.AssertionError: expected [200] but found [400]\n\tat org.testng.Assert.fail(Assert.java:111)\n\tat org.testng.Assert.failNotEquals(Assert.java:1578)\n\tat org.testng.Assert.assertEqualsImpl(Assert.java:150)\n\tat org.testng.Assert.assertEquals(Assert.java:132)\n\tat org.testng.Assert.assertEquals(Assert.java:1419)\n\tat org.testng.Assert.assertEquals(Assert.java:1383)\n\tat org.testng.Assert.assertEquals(Assert.java:1429)\n\tat api.tests.api.BoardApiTest.testGetChecklistsOnABoard(BoardApiTest.java:117)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)\n\tat org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)\n\tat org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)\n\tat org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)\n\tat org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)\n\tat org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1511)\n\tat org.testng.TestRunner.privateRun(TestRunner.java:739)\n\tat org.testng.TestRunner.run(TestRunner.java:614)\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:421)\n\tat org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)\n\tat org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:840)\n","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"description":"Get checklists from a board","status":"failed","statusMessage":"expected [200] but found [400]","statusTrace":"java.lang.AssertionError: expected [200] but found [400]\n\tat org.testng.Assert.fail(Assert.java:111)\n\tat org.testng.Assert.failNotEquals(Assert.java:1578)\n\tat org.testng.Assert.assertEqualsImpl(Assert.java:150)\n\tat org.testng.Assert.assertEquals(Assert.java:132)\n\tat org.testng.Assert.assertEquals(Assert.java:1419)\n\tat org.testng.Assert.assertEquals(Assert.java:1383)\n\tat org.testng.Assert.assertEquals(Assert.java:1429)\n\tat api.tests.api.BoardApiTest.testGetChecklistsOnABoard(BoardApiTest.java:117)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)\n\tat org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)\n\tat org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)\n\tat org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)\n\tat org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)\n\tat org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1511)\n\tat org.testng.TestRunner.privateRun(TestRunner.java:739)\n\tat org.testng.TestRunner.run(TestRunner.java:614)\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:421)\n\tat org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)\n\tat org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:840)\n","steps":[{"name":"Get checklists presented on a board with id - {'boardId'}","time":{"start":1744714308893,"stop":1744714309069,"duration":176},"status":"passed","steps":[],"attachments":[{"uid":"315a041e1330c2c3","name":"Request","source":"315a041e1330c2c3.html","type":"text/html","size":601},{"uid":"5751b7bf930d9ec0","name":"HTTP/1.1 400 Bad Request","source":"5751b7bf930d9ec0.html","type":"text/html","size":3346}],"parameters":[{"name":"boardId","value":"null"},{"name":"checklistsEndPoint","value":"/checklists/"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":2,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"package","value":"api.tests.api.BoardApiTest"},{"name":"testClass","value":"api.tests.api.BoardApiTest"},{"name":"testMethod","value":"testGetChecklistsOnABoard"},{"name":"parentSuite","value":"All test"},{"name":"suite","value":"Tests API with xml"},{"name":"subSuite","value":"api.tests.api.BoardApiTest"},{"name":"host","value":"edb1c7417d02"},{"name":"thread","value":"82@edb1c7417d02.TestNG-tests-1(22)"},{"name":"framework","value":"testng"},{"name":"language","value":"java"},{"name":"story","value":"Bord"},{"name":"epic","value":"API Tests"},{"name":"tag","value":"api"},{"name":"owner","value":"Group JavaForwardToOffer"},{"name":"feature","value":"Board Validation"},{"name":"severity","value":"normal"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","owner":"Group JavaForwardToOffer","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":3,"broken":0,"skipped":0,"passed":49,"unknown":0,"total":52},"items":[{"uid":"f52eeaeb32ad5403","reportUrl":"https://RomanBurlaka78.github.io/JavaRestAssuredTrelloApi/136//#testresult/f52eeaeb32ad5403","status":"failed","statusDetails":"expected [200] but found [400]","time":{"start":1744713841387,"stop":1744713841526,"duration":139}},{"uid":"274de806054548d0","reportUrl":"https://RomanBurlaka78.github.io/JavaRestAssuredTrelloApi/135//#testresult/274de806054548d0","status":"passed","time":{"start":1744638666350,"stop":1744638666524,"duration":174}},{"uid":"93a6e75497ff0229","reportUrl":"https://RomanBurlaka78.github.io/JavaRestAssuredTrelloApi/134//#testresult/93a6e75497ff0229","status":"passed","time":{"start":1744638493619,"stop":1744638493766,"duration":147}},{"uid":"412893ba20495c7f","reportUrl":"https://RomanBurlaka78.github.io/JavaRestAssuredTrelloApi/128//#testresult/412893ba20495c7f","status":"passed","time":{"start":1744497378158,"stop":1744497378257,"duration":99}},{"uid":"927d9893e192daff","reportUrl":"https://RomanBurlaka78.github.io/JavaRestAssuredTrelloApi/127//#testresult/927d9893e192daff","status":"passed","time":{"start":1744496778614,"stop":1744496778770,"duration":156}},{"uid":"4d15d46a4b3a39e0","reportUrl":"https://RomanBurlaka78.github.io/JavaRestAssuredTrelloApi/124//#testresult/4d15d46a4b3a39e0","status":"passed","time":{"start":1744386076316,"stop":1744386076426,"duration":110}},{"uid":"cdf6e9a836447a78","reportUrl":"https://RomanBurlaka78.github.io/JavaRestAssuredTrelloApi/121//#testresult/cdf6e9a836447a78","status":"passed","time":{"start":1744372170045,"stop":1744372170235,"duration":190}},{"uid":"b397648d6ba971dc","reportUrl":"https://RomanBurlaka78.github.io/JavaRestAssuredTrelloApi/117//#testresult/b397648d6ba971dc","status":"failed","statusDetails":"expected [200] but found [400]","time":{"start":1744362394577,"stop":1744362394721,"duration":144}},{"uid":"af54efc8f1748709","reportUrl":"https://RomanBurlaka78.github.io/JavaRestAssuredTrelloApi/112//#testresult/af54efc8f1748709","status":"passed","time":{"start":1744317629138,"stop":1744317629249,"duration":111}},{"uid":"f0b0ecd704cbeaa1","reportUrl":"https://RomanBurlaka78.github.io/JavaRestAssuredTrelloApi/110//#testresult/f0b0ecd704cbeaa1","status":"passed","time":{"start":1744317221750,"stop":1744317221853,"duration":103}},{"uid":"e12334b19cf5b180","reportUrl":"https://RomanBurlaka78.github.io/JavaRestAssuredTrelloApi/108//#testresult/e12334b19cf5b180","status":"passed","time":{"start":1744315924278,"stop":1744315924460,"duration":182}},{"uid":"24105512628c7191","reportUrl":"https://RomanBurlaka78.github.io/JavaRestAssuredTrelloApi/107//#testresult/24105512628c7191","status":"passed","time":{"start":1744314147293,"stop":1744314147401,"duration":108}},{"uid":"af742326e004acc3","reportUrl":"https://RomanBurlaka78.github.io/JavaRestAssuredTrelloApi/106//#testresult/af742326e004acc3","status":"passed","time":{"start":1744309175793,"stop":1744309175927,"duration":134}},{"uid":"1045c7f57c6b9d3a","reportUrl":"https://RomanBurlaka78.github.io/JavaRestAssuredTrelloApi/105//#testresult/1045c7f57c6b9d3a","status":"passed","time":{"start":1744308965105,"stop":1744308965213,"duration":108}},{"uid":"101cc30e221cad9","reportUrl":"https://RomanBurlaka78.github.io/JavaRestAssuredTrelloApi/104//#testresult/101cc30e221cad9","status":"passed","time":{"start":1744303759700,"stop":1744303759807,"duration":107}},{"uid":"94d5ce63bd8dcd7","reportUrl":"https://RomanBurlaka78.github.io/JavaRestAssuredTrelloApi/103//#testresult/94d5ce63bd8dcd7","status":"passed","time":{"start":1744303373803,"stop":1744303373911,"duration":108}},{"uid":"79b82210df173ee5","reportUrl":"https://RomanBurlaka78.github.io/JavaRestAssuredTrelloApi/102//#testresult/79b82210df173ee5","status":"passed","time":{"start":1744287881473,"stop":1744287881670,"duration":197}},{"uid":"d3b2bb62638ee0f8","reportUrl":"https://RomanBurlaka78.github.io/JavaRestAssuredTrelloApi/101//#testresult/d3b2bb62638ee0f8","status":"passed","time":{"start":1744287614188,"stop":1744287614344,"duration":156}},{"uid":"7b9e6ff3baa3b22c","reportUrl":"https://RomanBurlaka78.github.io/JavaRestAssuredTrelloApi/99//#testresult/7b9e6ff3baa3b22c","status":"passed","time":{"start":1744286902477,"stop":1744286902580,"duration":103}},{"uid":"b71b634eb21bbfc7","reportUrl":"https://RomanBurlaka78.github.io/JavaRestAssuredTrelloApi/98//#testresult/b71b634eb21bbfc7","status":"passed","time":{"start":1744286517650,"stop":1744286517807,"duration":157}}]},"tags":["api"]},"source":"4cb55af07f80259c.json","parameterValues":[]}