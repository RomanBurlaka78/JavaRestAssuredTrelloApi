{"uid":"50a25d76349fb55d","name":"testGetListsOnABoard","fullName":"api.tests.api.BoardApiTest.testGetListsOnABoard","historyId":"82f27fe0fdf37ab96323006a3f88b79e","time":{"start":1744743927467,"stop":1744743927594,"duration":127},"description":"Get all existed lists from a bord","descriptionHtml":"<p>Get all existed lists from a bord</p>\n","status":"broken","statusMessage":"Failed to parse the JSON document","statusTrace":"io.restassured.path.json.exception.JsonPathException: Failed to parse the JSON document\n\tat io.restassured.path.json.JsonPath$ExceptionCatcher.invoke(JsonPath.java:1002)\n\tat io.restassured.path.json.JsonPath$4.doParseWith(JsonPath.java:967)\n\tat io.restassured.path.json.JsonPath$JsonParser.parseWith(JsonPath.java:1047)\n\tat io.restassured.path.json.JsonPath.get(JsonPath.java:202)\n\tat io.restassured.path.json.JsonPath.getList(JsonPath.java:375)\n\tat api.tests.api.BoardApiTest.testGetListsOnABoard(BoardApiTest.java:172)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)\n\tat org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)\n\tat org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)\n\tat org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)\n\tat org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)\n\tat org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1511)\n\tat org.testng.TestRunner.privateRun(TestRunner.java:739)\n\tat org.testng.TestRunner.run(TestRunner.java:614)\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:421)\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:312)\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1208)\n\tat org.testng.TestNG.runSuites(TestNG.java:1112)\n\tat org.testng.TestNG.run(TestNG.java:1079)\n\tat org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:308)\n\tat org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:71)\n\tat org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:113)\n\tat org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)\n\tat org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)\n\tat org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)\n\tat org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)\nCaused by: groovy.json.JsonException: Lexing failed on line: 1, column: 1, while reading 'i', no possible valid JSON value or punctuation could be recognized.\n\tat groovy.json.JsonLexer.nextToken(JsonLexer.java:86)\n\tat groovy.json.JsonLexer$nextToken.call(Unknown Source)\n\tat io.restassured.internal.path.json.ConfigurableJsonSlurper.parse(ConfigurableJsonSlurper.groovy:97)\n\tat io.restassured.internal.path.json.ConfigurableJsonSlurper$parse.callCurrent(Unknown Source)\n\tat io.restassured.internal.path.json.ConfigurableJsonSlurper.parseText(ConfigurableJsonSlurper.groovy:83)\n\tat io.restassured.path.json.JsonPath$4$1.method(JsonPath.java:965)\n\tat io.restassured.path.json.JsonPath$ExceptionCatcher.invoke(JsonPath.java:1000)\n\t... 37 more\n","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"description":"Get all existed lists from a bord","status":"broken","statusMessage":"Failed to parse the JSON document","statusTrace":"io.restassured.path.json.exception.JsonPathException: Failed to parse the JSON document\n\tat io.restassured.path.json.JsonPath$ExceptionCatcher.invoke(JsonPath.java:1002)\n\tat io.restassured.path.json.JsonPath$4.doParseWith(JsonPath.java:967)\n\tat io.restassured.path.json.JsonPath$JsonParser.parseWith(JsonPath.java:1047)\n\tat io.restassured.path.json.JsonPath.get(JsonPath.java:202)\n\tat io.restassured.path.json.JsonPath.getList(JsonPath.java:375)\n\tat api.tests.api.BoardApiTest.testGetListsOnABoard(BoardApiTest.java:172)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)\n\tat org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)\n\tat org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)\n\tat org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)\n\tat org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)\n\tat org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1511)\n\tat org.testng.TestRunner.privateRun(TestRunner.java:739)\n\tat org.testng.TestRunner.run(TestRunner.java:614)\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:421)\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:312)\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1208)\n\tat org.testng.TestNG.runSuites(TestNG.java:1112)\n\tat org.testng.TestNG.run(TestNG.java:1079)\n\tat org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:308)\n\tat org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:71)\n\tat org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:113)\n\tat org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)\n\tat org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)\n\tat org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)\n\tat org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)\nCaused by: groovy.json.JsonException: Lexing failed on line: 1, column: 1, while reading 'i', no possible valid JSON value or punctuation could be recognized.\n\tat groovy.json.JsonLexer.nextToken(JsonLexer.java:86)\n\tat groovy.json.JsonLexer$nextToken.call(Unknown Source)\n\tat io.restassured.internal.path.json.ConfigurableJsonSlurper.parse(ConfigurableJsonSlurper.groovy:97)\n\tat io.restassured.internal.path.json.ConfigurableJsonSlurper$parse.callCurrent(Unknown Source)\n\tat io.restassured.internal.path.json.ConfigurableJsonSlurper.parseText(ConfigurableJsonSlurper.groovy:83)\n\tat io.restassured.path.json.JsonPath$4$1.method(JsonPath.java:965)\n\tat io.restassured.path.json.JsonPath$ExceptionCatcher.invoke(JsonPath.java:1000)\n\t... 37 more\n","steps":[{"name":"Get lists presented on a board","time":{"start":1744743927467,"stop":1744743927592,"duration":125},"status":"passed","steps":[],"attachments":[{"uid":"68dc06ac1038d627","name":"Request","source":"68dc06ac1038d627.html","type":"text/html","size":591},{"uid":"afabd1db8d875b2f","name":"HTTP/1.1 400 Bad Request","source":"afabd1db8d875b2f.html","type":"text/html","size":3347}],"parameters":[{"name":"boardId","value":"null"},{"name":"listsEndPoint","value":"/lists/"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":2,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"package","value":"api.tests.api.BoardApiTest"},{"name":"testClass","value":"api.tests.api.BoardApiTest"},{"name":"testMethod","value":"testGetListsOnABoard"},{"name":"parentSuite","value":"All test"},{"name":"suite","value":"Tests API with xml"},{"name":"subSuite","value":"api.tests.api.BoardApiTest"},{"name":"host","value":"9403464afe70"},{"name":"thread","value":"81@9403464afe70.main(1)"},{"name":"framework","value":"testng"},{"name":"language","value":"java"},{"name":"story","value":"Bord"},{"name":"epic","value":"API Tests"},{"name":"tag","value":"api"},{"name":"owner","value":"Group JavaForwardToOffer"},{"name":"feature","value":"Board Validation"},{"name":"severity","value":"normal"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","owner":"Group JavaForwardToOffer","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":14,"skipped":0,"passed":2,"unknown":0,"total":16},"items":[{"uid":"6ace2b7541e681","reportUrl":"https://RomanBurlaka78.github.io/JavaRestAssuredTrelloApi/147//#testresult/6ace2b7541e681","status":"broken","statusDetails":"Failed to parse the JSON document","time":{"start":1744743493270,"stop":1744743493426,"duration":156}},{"uid":"52cac3aa82dd140c","reportUrl":"https://RomanBurlaka78.github.io/JavaRestAssuredTrelloApi/146//#testresult/52cac3aa82dd140c","status":"broken","statusDetails":"Failed to parse the JSON document","time":{"start":1744740568379,"stop":1744740568499,"duration":120}},{"uid":"4249f0642b356ae3","reportUrl":"https://RomanBurlaka78.github.io/JavaRestAssuredTrelloApi/145//#testresult/4249f0642b356ae3","status":"broken","statusDetails":"Failed to parse the JSON document","time":{"start":1744737452032,"stop":1744737452152,"duration":120}},{"uid":"b061cebce708e70e","reportUrl":"https://RomanBurlaka78.github.io/JavaRestAssuredTrelloApi/144//#testresult/b061cebce708e70e","status":"broken","statusDetails":"Failed to parse the JSON document","time":{"start":1744737402441,"stop":1744737402591,"duration":150}},{"uid":"9c38b1e09222d071","reportUrl":"https://RomanBurlaka78.github.io/JavaRestAssuredTrelloApi/143//#testresult/9c38b1e09222d071","status":"broken","statusDetails":"Failed to parse the JSON document","time":{"start":1744737005818,"stop":1744737006004,"duration":186}},{"uid":"244ab219ef95f34a","reportUrl":"https://RomanBurlaka78.github.io/JavaRestAssuredTrelloApi/143//#testresult/244ab219ef95f34a","status":"broken","statusDetails":"Failed to parse the JSON document","time":{"start":1744736453179,"stop":1744736453399,"duration":220}},{"uid":"7c9327c8b90bf488","reportUrl":"https://RomanBurlaka78.github.io/JavaRestAssuredTrelloApi/142//#testresult/7c9327c8b90bf488","status":"broken","statusDetails":"Failed to parse the JSON document","time":{"start":1744718733928,"stop":1744718734113,"duration":185}},{"uid":"95bf5d451a817a1e","reportUrl":"https://RomanBurlaka78.github.io/JavaRestAssuredTrelloApi/141//#testresult/95bf5d451a817a1e","status":"broken","statusDetails":"Failed to parse the JSON document","time":{"start":1744718642543,"stop":1744718642663,"duration":120}},{"uid":"650336e025c63376","reportUrl":"https://RomanBurlaka78.github.io/JavaRestAssuredTrelloApi/140//#testresult/650336e025c63376","status":"broken","statusDetails":"Failed to parse the JSON document","time":{"start":1744715930387,"stop":1744715930529,"duration":142}},{"uid":"20a7fc6dcf23c927","reportUrl":"https://RomanBurlaka78.github.io/JavaRestAssuredTrelloApi/139//#testresult/20a7fc6dcf23c927","status":"broken","statusDetails":"Failed to parse the JSON document","time":{"start":1744715901066,"stop":1744715901182,"duration":116}},{"uid":"1aa16cc71250f7f2","reportUrl":"https://RomanBurlaka78.github.io/JavaRestAssuredTrelloApi/138//#testresult/1aa16cc71250f7f2","status":"broken","statusDetails":"Failed to parse the JSON document","time":{"start":1744714418294,"stop":1744714418422,"duration":128}},{"uid":"5e01f4c601bbd2e2","reportUrl":"https://RomanBurlaka78.github.io/JavaRestAssuredTrelloApi/137//#testresult/5e01f4c601bbd2e2","status":"broken","statusDetails":"Failed to parse the JSON document","time":{"start":1744714309601,"stop":1744714309712,"duration":111}},{"uid":"fa866cc4a34a502d","reportUrl":"https://RomanBurlaka78.github.io/JavaRestAssuredTrelloApi/136//#testresult/fa866cc4a34a502d","status":"broken","statusDetails":"Failed to parse the JSON document","time":{"start":1744713842040,"stop":1744713842179,"duration":139}},{"uid":"c93099f8b5a0eaab","reportUrl":"https://RomanBurlaka78.github.io/JavaRestAssuredTrelloApi/135//#testresult/c93099f8b5a0eaab","status":"passed","time":{"start":1744638667271,"stop":1744638667448,"duration":177}},{"uid":"5f8d9703a7cef85b","reportUrl":"https://RomanBurlaka78.github.io/JavaRestAssuredTrelloApi/134//#testresult/5f8d9703a7cef85b","status":"passed","time":{"start":1744638494262,"stop":1744638494397,"duration":135}}]},"tags":["api"]},"source":"50a25d76349fb55d.json","parameterValues":[]}