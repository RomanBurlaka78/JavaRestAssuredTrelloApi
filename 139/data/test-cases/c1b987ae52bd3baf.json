{"uid":"c1b987ae52bd3baf","name":"testGetCardsOnABoard","fullName":"api.tests.api.BoardApiTest.testGetCardsOnABoard","historyId":"443dab46df42c15d7cfb873ab0e80624","time":{"start":1744715900214,"stop":1744715900327,"duration":113},"description":"Get all existed cards from a bord","descriptionHtml":"<p>Get all existed cards from a bord</p>\n","status":"failed","statusMessage":"expected [200] but found [400]","statusTrace":"java.lang.AssertionError: expected [200] but found [400]\n\tat org.testng.Assert.fail(Assert.java:111)\n\tat org.testng.Assert.failNotEquals(Assert.java:1578)\n\tat org.testng.Assert.assertEqualsImpl(Assert.java:150)\n\tat org.testng.Assert.assertEquals(Assert.java:132)\n\tat org.testng.Assert.assertEquals(Assert.java:1419)\n\tat org.testng.Assert.assertEquals(Assert.java:1383)\n\tat org.testng.Assert.assertEquals(Assert.java:1429)\n\tat api.tests.api.BoardApiTest.testGetCardsOnABoard(BoardApiTest.java:133)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)\n\tat org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)\n\tat org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)\n\tat org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)\n\tat org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)\n\tat org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1511)\n\tat org.testng.TestRunner.privateRun(TestRunner.java:739)\n\tat org.testng.TestRunner.run(TestRunner.java:614)\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:421)\n\tat org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)\n\tat org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:840)\n","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"description":"Get all existed cards from a bord","status":"failed","statusMessage":"expected [200] but found [400]","statusTrace":"java.lang.AssertionError: expected [200] but found [400]\n\tat org.testng.Assert.fail(Assert.java:111)\n\tat org.testng.Assert.failNotEquals(Assert.java:1578)\n\tat org.testng.Assert.assertEqualsImpl(Assert.java:150)\n\tat org.testng.Assert.assertEquals(Assert.java:132)\n\tat org.testng.Assert.assertEquals(Assert.java:1419)\n\tat org.testng.Assert.assertEquals(Assert.java:1383)\n\tat org.testng.Assert.assertEquals(Assert.java:1429)\n\tat api.tests.api.BoardApiTest.testGetCardsOnABoard(BoardApiTest.java:133)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)\n\tat org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)\n\tat org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)\n\tat org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)\n\tat org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)\n\tat org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1511)\n\tat org.testng.TestRunner.privateRun(TestRunner.java:739)\n\tat org.testng.TestRunner.run(TestRunner.java:614)\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:421)\n\tat org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)\n\tat org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:840)\n","steps":[{"name":"Get cards presented on a board","time":{"start":1744715900214,"stop":1744715900325,"duration":111},"status":"passed","steps":[],"attachments":[{"uid":"275ef926cd612ce9","name":"Request","source":"275ef926cd612ce9.html","type":"text/html","size":591},{"uid":"c79c38046a13b2e6","name":"HTTP/1.1 400 Bad Request","source":"c79c38046a13b2e6.html","type":"text/html","size":3346}],"parameters":[{"name":"boardId","value":"null"},{"name":"cardsEndPoint","value":"/cards/"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":2,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"package","value":"api.tests.api.BoardApiTest"},{"name":"testClass","value":"api.tests.api.BoardApiTest"},{"name":"testMethod","value":"testGetCardsOnABoard"},{"name":"parentSuite","value":"All test"},{"name":"suite","value":"Tests API with xml"},{"name":"subSuite","value":"api.tests.api.BoardApiTest"},{"name":"host","value":"b0a558ee310e"},{"name":"thread","value":"81@b0a558ee310e.TestNG-tests-1(22)"},{"name":"framework","value":"testng"},{"name":"language","value":"java"},{"name":"story","value":"Bord"},{"name":"epic","value":"API Tests"},{"name":"tag","value":"api"},{"name":"owner","value":"Group JavaForwardToOffer"},{"name":"feature","value":"Board Validation"},{"name":"severity","value":"normal"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","owner":"Group JavaForwardToOffer","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":5,"broken":0,"skipped":0,"passed":51,"unknown":0,"total":56},"items":[{"uid":"64f48359442693c8","reportUrl":"https://RomanBurlaka78.github.io/JavaRestAssuredTrelloApi/138//#testresult/64f48359442693c8","status":"failed","statusDetails":"expected [200] but found [400]","time":{"start":1744714417398,"stop":1744714417549,"duration":151}},{"uid":"a188f86b29505da4","reportUrl":"https://RomanBurlaka78.github.io/JavaRestAssuredTrelloApi/137//#testresult/a188f86b29505da4","status":"failed","statusDetails":"expected [200] but found [400]","time":{"start":1744714308723,"stop":1744714308879,"duration":156}},{"uid":"90d897bfb8df4537","reportUrl":"https://RomanBurlaka78.github.io/JavaRestAssuredTrelloApi/136//#testresult/90d897bfb8df4537","status":"failed","statusDetails":"expected [200] but found [400]","time":{"start":1744713841238,"stop":1744713841382,"duration":144}},{"uid":"c7b8934efdc0eafa","reportUrl":"https://RomanBurlaka78.github.io/JavaRestAssuredTrelloApi/135//#testresult/c7b8934efdc0eafa","status":"passed","time":{"start":1744638666164,"stop":1744638666347,"duration":183}},{"uid":"287addbe76418c7c","reportUrl":"https://RomanBurlaka78.github.io/JavaRestAssuredTrelloApi/134//#testresult/287addbe76418c7c","status":"passed","time":{"start":1744638493496,"stop":1744638493616,"duration":120}},{"uid":"a41b1e60988e6911","reportUrl":"https://RomanBurlaka78.github.io/JavaRestAssuredTrelloApi/128//#testresult/a41b1e60988e6911","status":"passed","time":{"start":1744497377533,"stop":1744497377635,"duration":102}},{"uid":"d8ea99dcaf84da8c","reportUrl":"https://RomanBurlaka78.github.io/JavaRestAssuredTrelloApi/127//#testresult/d8ea99dcaf84da8c","status":"passed","time":{"start":1744496777429,"stop":1744496777596,"duration":167}},{"uid":"4cebfb0d137d379f","reportUrl":"https://RomanBurlaka78.github.io/JavaRestAssuredTrelloApi/124//#testresult/4cebfb0d137d379f","status":"passed","time":{"start":1744386075641,"stop":1744386075745,"duration":104}},{"uid":"5be3498dea6a781a","reportUrl":"https://RomanBurlaka78.github.io/JavaRestAssuredTrelloApi/122//#testresult/5be3498dea6a781a","status":"passed","time":{"start":1744372437119,"stop":1744372437305,"duration":186}},{"uid":"1974881fdee81b42","reportUrl":"https://RomanBurlaka78.github.io/JavaRestAssuredTrelloApi/121//#testresult/1974881fdee81b42","status":"passed","time":{"start":1744372168823,"stop":1744372169025,"duration":202}},{"uid":"ce06eeb7fe815432","reportUrl":"https://RomanBurlaka78.github.io/JavaRestAssuredTrelloApi/117//#testresult/ce06eeb7fe815432","status":"failed","statusDetails":"expected [200] but found [400]","time":{"start":1744362393704,"stop":1744362393855,"duration":151}},{"uid":"cfd4fec31ad9bce8","reportUrl":"https://RomanBurlaka78.github.io/JavaRestAssuredTrelloApi/112//#testresult/cfd4fec31ad9bce8","status":"passed","time":{"start":1744317628469,"stop":1744317628575,"duration":106}},{"uid":"19406f9f1cb4077b","reportUrl":"https://RomanBurlaka78.github.io/JavaRestAssuredTrelloApi/110//#testresult/19406f9f1cb4077b","status":"passed","time":{"start":1744317221090,"stop":1744317221225,"duration":135}},{"uid":"3e305ec819917574","reportUrl":"https://RomanBurlaka78.github.io/JavaRestAssuredTrelloApi/108//#testresult/3e305ec819917574","status":"passed","time":{"start":1744315923194,"stop":1744315923370,"duration":176}},{"uid":"e5bcde82f78f1dd8","reportUrl":"https://RomanBurlaka78.github.io/JavaRestAssuredTrelloApi/107//#testresult/e5bcde82f78f1dd8","status":"passed","time":{"start":1744314146567,"stop":1744314146685,"duration":118}},{"uid":"2bf8441522fc27dc","reportUrl":"https://RomanBurlaka78.github.io/JavaRestAssuredTrelloApi/106//#testresult/2bf8441522fc27dc","status":"passed","time":{"start":1744309175027,"stop":1744309175147,"duration":120}},{"uid":"3de0dfedeb0c6e9f","reportUrl":"https://RomanBurlaka78.github.io/JavaRestAssuredTrelloApi/105//#testresult/3de0dfedeb0c6e9f","status":"passed","time":{"start":1744308964319,"stop":1744308964443,"duration":124}},{"uid":"7f5b8586bafd899","reportUrl":"https://RomanBurlaka78.github.io/JavaRestAssuredTrelloApi/104//#testresult/7f5b8586bafd899","status":"passed","time":{"start":1744303758994,"stop":1744303759107,"duration":113}},{"uid":"eb9238d433b6f600","reportUrl":"https://RomanBurlaka78.github.io/JavaRestAssuredTrelloApi/103//#testresult/eb9238d433b6f600","status":"passed","time":{"start":1744303373099,"stop":1744303373226,"duration":127}},{"uid":"8d83776667e3a4d","reportUrl":"https://RomanBurlaka78.github.io/JavaRestAssuredTrelloApi/102//#testresult/8d83776667e3a4d","status":"passed","time":{"start":1744287880120,"stop":1744287880393,"duration":273}}]},"tags":["api"]},"source":"c1b987ae52bd3baf.json","parameterValues":[]}