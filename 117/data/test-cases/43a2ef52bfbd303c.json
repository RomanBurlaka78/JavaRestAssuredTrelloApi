{"uid":"43a2ef52bfbd303c","name":"Get all existed custom fields from a bord","fullName":"api.tests.api.BoardApiTest.testGetCustomFieldsForABoard","historyId":"35286fbef6d0ce6e1c3a0dd71d5a2cf1","time":{"start":1744362394007,"stop":1744362394152,"duration":145},"status":"failed","statusMessage":"expected [200] but found [400]","statusTrace":"java.lang.AssertionError: expected [200] but found [400]\n\tat org.testng.Assert.fail(Assert.java:111)\n\tat org.testng.Assert.failNotEquals(Assert.java:1578)\n\tat org.testng.Assert.assertEqualsImpl(Assert.java:150)\n\tat org.testng.Assert.assertEquals(Assert.java:132)\n\tat org.testng.Assert.assertEquals(Assert.java:1419)\n\tat org.testng.Assert.assertEquals(Assert.java:1383)\n\tat org.testng.Assert.assertEquals(Assert.java:1429)\n\tat api.tests.api.BoardApiTest.testGetCustomFieldsForABoard(BoardApiTest.java:181)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)\n\tat org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)\n\tat org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)\n\tat org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)\n\tat org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)\n\tat org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1511)\n\tat org.testng.TestRunner.privateRun(TestRunner.java:739)\n\tat org.testng.TestRunner.run(TestRunner.java:614)\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:421)\n\tat org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)\n\tat org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:840)\n","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"expected [200] but found [400]","statusTrace":"java.lang.AssertionError: expected [200] but found [400]\n\tat org.testng.Assert.fail(Assert.java:111)\n\tat org.testng.Assert.failNotEquals(Assert.java:1578)\n\tat org.testng.Assert.assertEqualsImpl(Assert.java:150)\n\tat org.testng.Assert.assertEquals(Assert.java:132)\n\tat org.testng.Assert.assertEquals(Assert.java:1419)\n\tat org.testng.Assert.assertEquals(Assert.java:1383)\n\tat org.testng.Assert.assertEquals(Assert.java:1429)\n\tat api.tests.api.BoardApiTest.testGetCustomFieldsForABoard(BoardApiTest.java:181)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)\n\tat org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)\n\tat org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)\n\tat org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)\n\tat org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)\n\tat org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1511)\n\tat org.testng.TestRunner.privateRun(TestRunner.java:739)\n\tat org.testng.TestRunner.run(TestRunner.java:614)\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:421)\n\tat org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)\n\tat org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:840)\n","steps":[{"name":"Get custom fields presented on a board","time":{"start":1744362394007,"stop":1744362394151,"duration":144},"status":"passed","steps":[],"attachments":[{"uid":"7e21dcfca8366fe6","name":"Request","source":"7e21dcfca8366fe6.html","type":"text/html","size":603},{"uid":"7d3abdc0adee3355","name":"HTTP/1.1 400 Bad Request","source":"7d3abdc0adee3355.html","type":"text/html","size":3346}],"parameters":[{"name":"boardId","value":"null"},{"name":"customFieldsEndPoint","value":"/customFields"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":2,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"package","value":"api.tests.api.BoardApiTest"},{"name":"testClass","value":"api.tests.api.BoardApiTest"},{"name":"testMethod","value":"testGetCustomFieldsForABoard"},{"name":"parentSuite","value":"All test"},{"name":"suite","value":"Tests API with xml"},{"name":"subSuite","value":"api.tests.api.BoardApiTest"},{"name":"host","value":"afbde0ae116a"},{"name":"thread","value":"80@afbde0ae116a.TestNG-tests-1(22)"},{"name":"framework","value":"testng"},{"name":"language","value":"java"},{"name":"story","value":"Bord"},{"name":"epic","value":"API Tests"},{"name":"tag","value":"api"},{"name":"owner","value":"Group JavaForwardToOffer"},{"name":"feature","value":"Board Validation"},{"name":"severity","value":"normal"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","owner":"Group JavaForwardToOffer","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":0,"skipped":0,"passed":43,"unknown":0,"total":44},"items":[{"uid":"3040c3ea93304530","reportUrl":"https://RomanBurlaka78.github.io/JavaRestAssuredTrelloApi/112//#testresult/3040c3ea93304530","status":"passed","time":{"start":1744317629255,"stop":1744317629358,"duration":103}},{"uid":"cbeb02a68be73109","reportUrl":"https://RomanBurlaka78.github.io/JavaRestAssuredTrelloApi/110//#testresult/cbeb02a68be73109","status":"passed","time":{"start":1744317221856,"stop":1744317221960,"duration":104}},{"uid":"e11a5f44881ebf80","reportUrl":"https://RomanBurlaka78.github.io/JavaRestAssuredTrelloApi/108//#testresult/e11a5f44881ebf80","status":"passed","time":{"start":1744315924463,"stop":1744315924633,"duration":170}},{"uid":"aba184ddfb75ae1e","reportUrl":"https://RomanBurlaka78.github.io/JavaRestAssuredTrelloApi/107//#testresult/aba184ddfb75ae1e","status":"passed","time":{"start":1744314147403,"stop":1744314147513,"duration":110}},{"uid":"9a32b51d66e63bed","reportUrl":"https://RomanBurlaka78.github.io/JavaRestAssuredTrelloApi/106//#testresult/9a32b51d66e63bed","status":"passed","time":{"start":1744309175930,"stop":1744309176050,"duration":120}},{"uid":"3db1b2a6c8ee6a68","reportUrl":"https://RomanBurlaka78.github.io/JavaRestAssuredTrelloApi/105//#testresult/3db1b2a6c8ee6a68","status":"passed","time":{"start":1744308965216,"stop":1744308965327,"duration":111}},{"uid":"16b4d32a145759f5","reportUrl":"https://RomanBurlaka78.github.io/JavaRestAssuredTrelloApi/104//#testresult/16b4d32a145759f5","status":"passed","time":{"start":1744303759810,"stop":1744303759920,"duration":110}},{"uid":"4c8f212b0f2d9caa","reportUrl":"https://RomanBurlaka78.github.io/JavaRestAssuredTrelloApi/103//#testresult/4c8f212b0f2d9caa","status":"passed","time":{"start":1744303373913,"stop":1744303374021,"duration":108}},{"uid":"ec3a406aa393d610","reportUrl":"https://RomanBurlaka78.github.io/JavaRestAssuredTrelloApi/102//#testresult/ec3a406aa393d610","status":"passed","time":{"start":1744287881673,"stop":1744287881868,"duration":195}},{"uid":"50ae554f78e4ab85","reportUrl":"https://RomanBurlaka78.github.io/JavaRestAssuredTrelloApi/101//#testresult/50ae554f78e4ab85","status":"passed","time":{"start":1744287614349,"stop":1744287614529,"duration":180}},{"uid":"c06b229d829b0660","reportUrl":"https://RomanBurlaka78.github.io/JavaRestAssuredTrelloApi/99//#testresult/c06b229d829b0660","status":"passed","time":{"start":1744286901763,"stop":1744286901924,"duration":161}},{"uid":"fad3e7436ea9c5cd","reportUrl":"https://RomanBurlaka78.github.io/JavaRestAssuredTrelloApi/98//#testresult/fad3e7436ea9c5cd","status":"passed","time":{"start":1744286517812,"stop":1744286517942,"duration":130}},{"uid":"38a1b8aa39f6ab84","reportUrl":"https://RomanBurlaka78.github.io/JavaRestAssuredTrelloApi/97//#testresult/38a1b8aa39f6ab84","status":"passed","time":{"start":1744286081314,"stop":1744286081439,"duration":125}},{"uid":"e25f326a96b5342","reportUrl":"https://RomanBurlaka78.github.io/JavaRestAssuredTrelloApi/91//#testresult/e25f326a96b5342","status":"passed","time":{"start":1744279383061,"stop":1744279383180,"duration":119}},{"uid":"a8ee4ca0e1620a76","reportUrl":"https://RomanBurlaka78.github.io/JavaRestAssuredTrelloApi/90//#testresult/a8ee4ca0e1620a76","status":"passed","time":{"start":1744279281119,"stop":1744279281292,"duration":173}},{"uid":"22b7d966e5ebb9c3","reportUrl":"https://RomanBurlaka78.github.io/JavaRestAssuredTrelloApi/89//#testresult/22b7d966e5ebb9c3","status":"passed","time":{"start":1744227683673,"stop":1744227683799,"duration":126}},{"uid":"eabbfdba334f2728","reportUrl":"https://RomanBurlaka78.github.io/JavaRestAssuredTrelloApi/88//#testresult/eabbfdba334f2728","status":"passed","time":{"start":1744227578241,"stop":1744227578349,"duration":108}},{"uid":"6325d491f59d5a8c","reportUrl":"https://RomanBurlaka78.github.io/JavaRestAssuredTrelloApi/87//#testresult/6325d491f59d5a8c","status":"passed","time":{"start":1744223570949,"stop":1744223571118,"duration":169}},{"uid":"c472a52bf9bbbb","reportUrl":"https://RomanBurlaka78.github.io/JavaRestAssuredTrelloApi/86//#testresult/c472a52bf9bbbb","status":"passed","time":{"start":1744223371550,"stop":1744223371696,"duration":146}},{"uid":"d029b31ae03be49f","reportUrl":"https://RomanBurlaka78.github.io/JavaRestAssuredTrelloApi/85//#testresult/d029b31ae03be49f","status":"passed","time":{"start":1744221952157,"stop":1744221952381,"duration":224}}]},"tags":["api"]},"source":"43a2ef52bfbd303c.json","parameterValues":[]}