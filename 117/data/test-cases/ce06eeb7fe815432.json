{"uid":"ce06eeb7fe815432","name":"Get all existed cards from a bord","fullName":"api.tests.api.BoardApiTest.testGetCardsOnABoard","historyId":"443dab46df42c15d7cfb873ab0e80624","time":{"start":1744362393704,"stop":1744362393855,"duration":151},"status":"failed","statusMessage":"expected [200] but found [400]","statusTrace":"java.lang.AssertionError: expected [200] but found [400]\n\tat org.testng.Assert.fail(Assert.java:111)\n\tat org.testng.Assert.failNotEquals(Assert.java:1578)\n\tat org.testng.Assert.assertEqualsImpl(Assert.java:150)\n\tat org.testng.Assert.assertEquals(Assert.java:132)\n\tat org.testng.Assert.assertEquals(Assert.java:1419)\n\tat org.testng.Assert.assertEquals(Assert.java:1383)\n\tat org.testng.Assert.assertEquals(Assert.java:1429)\n\tat api.tests.api.BoardApiTest.testGetCardsOnABoard(BoardApiTest.java:157)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)\n\tat org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)\n\tat org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)\n\tat org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)\n\tat org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)\n\tat org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1511)\n\tat org.testng.TestRunner.privateRun(TestRunner.java:739)\n\tat org.testng.TestRunner.run(TestRunner.java:614)\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:421)\n\tat org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)\n\tat org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:840)\n","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"expected [200] but found [400]","statusTrace":"java.lang.AssertionError: expected [200] but found [400]\n\tat org.testng.Assert.fail(Assert.java:111)\n\tat org.testng.Assert.failNotEquals(Assert.java:1578)\n\tat org.testng.Assert.assertEqualsImpl(Assert.java:150)\n\tat org.testng.Assert.assertEquals(Assert.java:132)\n\tat org.testng.Assert.assertEquals(Assert.java:1419)\n\tat org.testng.Assert.assertEquals(Assert.java:1383)\n\tat org.testng.Assert.assertEquals(Assert.java:1429)\n\tat api.tests.api.BoardApiTest.testGetCardsOnABoard(BoardApiTest.java:157)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)\n\tat org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)\n\tat org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)\n\tat org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)\n\tat org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)\n\tat org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1511)\n\tat org.testng.TestRunner.privateRun(TestRunner.java:739)\n\tat org.testng.TestRunner.run(TestRunner.java:614)\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:421)\n\tat org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)\n\tat org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:840)\n","steps":[{"name":"Get cards presented on a board","time":{"start":1744362393704,"stop":1744362393848,"duration":144},"status":"passed","steps":[],"attachments":[{"uid":"88ca18635764bdc1","name":"Request","source":"88ca18635764bdc1.html","type":"text/html","size":591},{"uid":"ca52ae89559564c7","name":"HTTP/1.1 400 Bad Request","source":"ca52ae89559564c7.html","type":"text/html","size":3346}],"parameters":[{"name":"boardId","value":"null"},{"name":"cardsEndPoint","value":"/cards/"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":2,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"package","value":"api.tests.api.BoardApiTest"},{"name":"testClass","value":"api.tests.api.BoardApiTest"},{"name":"testMethod","value":"testGetCardsOnABoard"},{"name":"parentSuite","value":"All test"},{"name":"suite","value":"Tests API with xml"},{"name":"subSuite","value":"api.tests.api.BoardApiTest"},{"name":"host","value":"afbde0ae116a"},{"name":"thread","value":"80@afbde0ae116a.TestNG-tests-1(22)"},{"name":"framework","value":"testng"},{"name":"language","value":"java"},{"name":"story","value":"Bord"},{"name":"epic","value":"API Tests"},{"name":"tag","value":"api"},{"name":"owner","value":"Group JavaForwardToOffer"},{"name":"feature","value":"Board Validation"},{"name":"severity","value":"normal"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","owner":"Group JavaForwardToOffer","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":0,"skipped":0,"passed":44,"unknown":0,"total":45},"items":[{"uid":"cfd4fec31ad9bce8","reportUrl":"https://RomanBurlaka78.github.io/JavaRestAssuredTrelloApi/112//#testresult/cfd4fec31ad9bce8","status":"passed","time":{"start":1744317628469,"stop":1744317628575,"duration":106}},{"uid":"19406f9f1cb4077b","reportUrl":"https://RomanBurlaka78.github.io/JavaRestAssuredTrelloApi/110//#testresult/19406f9f1cb4077b","status":"passed","time":{"start":1744317221090,"stop":1744317221225,"duration":135}},{"uid":"3e305ec819917574","reportUrl":"https://RomanBurlaka78.github.io/JavaRestAssuredTrelloApi/108//#testresult/3e305ec819917574","status":"passed","time":{"start":1744315923194,"stop":1744315923370,"duration":176}},{"uid":"e5bcde82f78f1dd8","reportUrl":"https://RomanBurlaka78.github.io/JavaRestAssuredTrelloApi/107//#testresult/e5bcde82f78f1dd8","status":"passed","time":{"start":1744314146567,"stop":1744314146685,"duration":118}},{"uid":"2bf8441522fc27dc","reportUrl":"https://RomanBurlaka78.github.io/JavaRestAssuredTrelloApi/106//#testresult/2bf8441522fc27dc","status":"passed","time":{"start":1744309175027,"stop":1744309175147,"duration":120}},{"uid":"3de0dfedeb0c6e9f","reportUrl":"https://RomanBurlaka78.github.io/JavaRestAssuredTrelloApi/105//#testresult/3de0dfedeb0c6e9f","status":"passed","time":{"start":1744308964319,"stop":1744308964443,"duration":124}},{"uid":"7f5b8586bafd899","reportUrl":"https://RomanBurlaka78.github.io/JavaRestAssuredTrelloApi/104//#testresult/7f5b8586bafd899","status":"passed","time":{"start":1744303758994,"stop":1744303759107,"duration":113}},{"uid":"eb9238d433b6f600","reportUrl":"https://RomanBurlaka78.github.io/JavaRestAssuredTrelloApi/103//#testresult/eb9238d433b6f600","status":"passed","time":{"start":1744303373099,"stop":1744303373226,"duration":127}},{"uid":"8d83776667e3a4d","reportUrl":"https://RomanBurlaka78.github.io/JavaRestAssuredTrelloApi/102//#testresult/8d83776667e3a4d","status":"passed","time":{"start":1744287880120,"stop":1744287880393,"duration":273}},{"uid":"9b3668b03edcc743","reportUrl":"https://RomanBurlaka78.github.io/JavaRestAssuredTrelloApi/101//#testresult/9b3668b03edcc743","status":"passed","time":{"start":1744287612782,"stop":1744287612994,"duration":212}},{"uid":"efb392c9250749c2","reportUrl":"https://RomanBurlaka78.github.io/JavaRestAssuredTrelloApi/100//#testresult/efb392c9250749c2","status":"passed","time":{"start":1744287380823,"stop":1744287380967,"duration":144}},{"uid":"282d8e36f14a7ef7","reportUrl":"https://RomanBurlaka78.github.io/JavaRestAssuredTrelloApi/99//#testresult/282d8e36f14a7ef7","status":"passed","time":{"start":1744286901447,"stop":1744286901618,"duration":171}},{"uid":"61c88b71bbb3c0ef","reportUrl":"https://RomanBurlaka78.github.io/JavaRestAssuredTrelloApi/98//#testresult/61c88b71bbb3c0ef","status":"passed","time":{"start":1744286516545,"stop":1744286516711,"duration":166}},{"uid":"ec5323c2068c4ffc","reportUrl":"https://RomanBurlaka78.github.io/JavaRestAssuredTrelloApi/97//#testresult/ec5323c2068c4ffc","status":"passed","time":{"start":1744286080150,"stop":1744286080329,"duration":179}},{"uid":"90f2c0f4ea618727","reportUrl":"https://RomanBurlaka78.github.io/JavaRestAssuredTrelloApi/91//#testresult/90f2c0f4ea618727","status":"passed","time":{"start":1744279382197,"stop":1744279382322,"duration":125}},{"uid":"21c8f8f35ed7f2e8","reportUrl":"https://RomanBurlaka78.github.io/JavaRestAssuredTrelloApi/90//#testresult/21c8f8f35ed7f2e8","status":"passed","time":{"start":1744279279880,"stop":1744279280052,"duration":172}},{"uid":"ea4668d03011a0f4","reportUrl":"https://RomanBurlaka78.github.io/JavaRestAssuredTrelloApi/89//#testresult/ea4668d03011a0f4","status":"passed","time":{"start":1744227682707,"stop":1744227682889,"duration":182}},{"uid":"e685f6b42d80d78d","reportUrl":"https://RomanBurlaka78.github.io/JavaRestAssuredTrelloApi/88//#testresult/e685f6b42d80d78d","status":"passed","time":{"start":1744227577287,"stop":1744227577405,"duration":118}},{"uid":"1ca86bfab4fc437b","reportUrl":"https://RomanBurlaka78.github.io/JavaRestAssuredTrelloApi/87//#testresult/1ca86bfab4fc437b","status":"passed","time":{"start":1744223570595,"stop":1744223570768,"duration":173}},{"uid":"bdddec6d0a89aa5e","reportUrl":"https://RomanBurlaka78.github.io/JavaRestAssuredTrelloApi/86//#testresult/bdddec6d0a89aa5e","status":"passed","time":{"start":1744223370409,"stop":1744223370574,"duration":165}}]},"tags":["api"]},"source":"ce06eeb7fe815432.json","parameterValues":[]}